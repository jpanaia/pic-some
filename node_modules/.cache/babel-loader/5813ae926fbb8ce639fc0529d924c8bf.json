{"ast":null,"code":"var _jsxFileName = \"/Users/jpr/Documents/React Bootcamp/pic-some/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [allPhotos, setAllPhotos] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const json = await response.json(); // console.log(json)\n\n        setAllPhotos(json);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  function toggleFavorite(id) {\n    const updatedArray = allPhotos.map(photo => {\n      if (photo.id === id) {\n        console.log(id);\n        console.log(!photo.isFavorite);\n        return { ...photo,\n          isFavorite: !photo.isFavorite\n        };\n      }\n\n      return photo;\n    });\n    setAllPhotos(updatedArray);\n  }\n\n  function addImageToCart(img) {\n    setCartItems(img.id);\n    console.log(cartItems);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      allPhotos,\n      toggleFavorite,\n      addImageToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"A/X3QEg2lVpItWyNAQhCgR30/WA=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/jpr/Documents/React Bootcamp/pic-some/src/Context.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","allPhotos","setAllPhotos","cartItems","setCartItems","url","fetchData","response","fetch","json","error","console","log","toggleFavorite","id","updatedArray","map","photo","isFavorite","addImageToCart","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AACA,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,OAAqC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,GAAG,GAAG,8FAAZ;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,cAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB,CAFE,CAGH;;AACCP,QAAAA,YAAY,CAACO,IAAD,CAAZ;AACD,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD;AACF,KATH;;AAWEJ,IAAAA,SAAS;AACZ,GAfM,EAeJ,EAfI,CAAT;;AAiBA,WAASO,cAAT,CAAwBC,EAAxB,EAA4B;AACxB,UAAMC,YAAY,GAAGd,SAAS,CAACe,GAAV,CAAcC,KAAK,IAAI;AACxC,UAAGA,KAAK,CAACH,EAAN,KAAaA,EAAhB,EAAoB;AAChBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,CAACK,KAAK,CAACC,UAAnB;AACA,eAAO,EACH,GAAGD,KADA;AAEHC,UAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AAFhB,SAAP;AAIH;;AACD,aAAOD,KAAP;AACH,KAVoB,CAArB;AAYAf,IAAAA,YAAY,CAACa,YAAD,CAAZ;AACH;;AAED,WAASI,cAAT,CAAwBC,GAAxB,EAA6B;AACzBhB,IAAAA,YAAY,CAACgB,GAAG,CAACN,EAAL,CAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH;;AAED,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACF,MAAAA,SAAD;AAAYY,MAAAA,cAAZ;AAA4BM,MAAAA;AAA5B,KAAzB;AAAA,cACKnB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA/CQD,e;;KAAAA,e;AAiDT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React, {useState, useEffect} from \"react\"\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    const [allPhotos, setAllPhotos] = useState([])\n    const [cartItems, setCartItems] = useState([])\n    \n    useEffect(() => {\n        const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\n        \n        const fetchData = async () => {\n            try {\n              const response = await fetch(url)\n              const json = await response.json()\n             // console.log(json)\n              setAllPhotos(json)\n            } catch (error) {\n              console.log(\"error\", error)\n            }\n          }\n      \n          fetchData()\n      }, [])\n\n    function toggleFavorite(id) {\n        const updatedArray = allPhotos.map(photo => {\n            if(photo.id === id) {\n                console.log(id)\n                console.log(!photo.isFavorite)\n                return {\n                    ...photo,\n                    isFavorite: !photo.isFavorite\n                }\n            }\n            return photo\n        })\n\n        setAllPhotos(updatedArray)\n    }\n\n    function addImageToCart(img) {\n        setCartItems(img.id)\n        console.log(cartItems)\n    }\n\n    return (\n        <Context.Provider value={{allPhotos, toggleFavorite, addImageToCart}}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}\n"]},"metadata":{},"sourceType":"module"}