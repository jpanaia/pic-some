{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\n\nfunction useHover() {\n  _s();\n\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef(null);\n\n  function enter() {\n    setHovered(true);\n  }\n\n  function leave() {\n    setHovered(false);\n  }\n\n  useEffect(() => {\n    ref.current.addEventListener(\"mouseenter\", enter);\n    ref.current.addEventListener(\"mouseleave\", leave);\n    return () => {\n      ref.current.removeEventListener(\"mouseenter\", enter);\n      ref.current.removeEventListener(\"mouseleave\", leave);\n    };\n  }, []);\n  return [hovered, ref];\n}\n\n_s(useHover, \"GchDaTIEDRSnXaH2hTQIeCeY3HE=\");\n\nexport default useHover;","map":{"version":3,"sources":["/Users/jpr/Documents/React Bootcamp/pic-some/src/hooks/useHover.js"],"names":["useState","useEffect","useRef","useHover","hovered","setHovered","ref","enter","leave","current","addEventListener","removeEventListener"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMM,GAAG,GAAGJ,MAAM,CAAC,IAAD,CAAlB;;AAEA,WAASK,KAAT,GAAiB;AACbF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAASG,KAAT,GAAiB;AACbH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,GAAG,CAACG,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CH,KAA3C;AACAD,IAAAA,GAAG,CAACG,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CF,KAA3C;AAEA,WAAO,MAAM;AACTF,MAAAA,GAAG,CAACG,OAAJ,CAAYE,mBAAZ,CAAgC,YAAhC,EAA8CJ,KAA9C;AACAD,MAAAA,GAAG,CAACG,OAAJ,CAAYE,mBAAZ,CAAgC,YAAhC,EAA8CH,KAA9C;AACH,KAHD;AAIH,GARQ,EAQN,EARM,CAAT;AAUA,SAAO,CAACJ,OAAD,EAAUE,GAAV,CAAP;AACH;;GAvBQH,Q;;AAyBT,eAAeA,QAAf","sourcesContent":["import {useState, useEffect, useRef} from \"react\"\n\nfunction useHover() {\n    const [hovered, setHovered] = useState(false)\n    const ref = useRef(null)\n\n    function enter() {\n        setHovered(true)\n    }\n\n    function leave() {\n        setHovered(false)\n    }\n    \n    useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter)\n        ref.current.addEventListener(\"mouseleave\", leave)\n        \n        return () => {    \n            ref.current.removeEventListener(\"mouseenter\", enter)\n            ref.current.removeEventListener(\"mouseleave\", leave)\n        }\n    }, [])\n\n    return [hovered, ref]\n}\n\nexport default useHover"]},"metadata":{},"sourceType":"module"}